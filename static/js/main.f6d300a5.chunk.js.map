{"version":3,"sources":["img/female.png","img/male.png","data/ContactsList.js","components/contacts/Contact.js","components/contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","contacts","firstName","lastName","phone","gender","Contact","props","contact","useState","isHide","setIsHide","className","onClick","src","Female","Male","alt","Contacts","state","search","male","female","unknown","filterByGender","handleSearchChange","e","persist","setState","target","value","handleGender","name","checked","this","type","onChange","id","htmlFor","filter","toLowerCase","includes","map","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f6d300a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/female.95950292.png\";","module.exports = __webpack_public_path__ + \"static/media/male.1dea51bc.png\";","export const contacts = [\n  {\n    firstName: \"Барней\",\n    lastName: \"Стинсовский\",\n    phone: \"+380956319521\",\n    gender: \"male\"\n  },\n  {\n    firstName: \"Робин\",\n    lastName: \"Щербатская\",\n    phone: \"+380931460123\",\n    gender: \"female\"\n  },\n  {\n    firstName: \"Аномный\",\n    lastName: \"Анонимус\",\n    phone: \"+380666666666\"\n  },\n  {\n    firstName: \"Лилия\",\n    lastName: \"Олдровна\",\n    phone: \"+380504691254\",\n    gender: \"female\"\n  },\n  {\n    firstName: \"Маршэн\",\n    lastName: \"Эриксонян\",\n    phone: \"+380739432123\",\n    gender: \"male\"\n  },\n  {\n    firstName: \"Теодор\",\n    lastName: \"Мотсбэс\",\n    phone: \"+380956319521\",\n    gender: \"male\"\n  }\n];","import React, { useState } from \"react\";\nimport Female from \"../../img/female.png\";\nimport Male from \"../../img/male.png\";\n\nexport default function Contact(props) {\n  const { contact } = props;\n  const [isHide, setIsHide] = useState(true);\n\n  return (\n    <div className=\"media contact-card\" onClick={() => setIsHide(!isHide)}>\n\n      {contact.gender ? (\n        <img className=\"contact-icon\" src={contact.gender === \"female\" ? Female : Male} alt=\"\" />\n      ) : null} \n      <div className=\"media-body\">\n        <h6 className=\"contact-card-info\"><span>First name:</span> {contact.firstName} </h6>\n        {isHide ? null : (\n          <>\n            <p className=\"h6 contact-card-info\"><span>Last name:</span> {contact.lastName}</p>\n            <p className=\"h6 contact-card-info\"><span>Number:</span> {contact.phone}</p>\n            {contact.gender ? (\n              <p className=\"h6 contact-card-info\"><span>Gender:</span> {contact.gender}</p>\n            ) : null}\n          </>\n        )}\n      </div>\n\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport { contacts } from \"../../data/ContactsList\";\nimport Contact from \"./Contact\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './contacts.css';\n\nclass Contacts extends Component {\n  state = {\n    contacts,\n    search: \"\",\n    male: true,\n    female: true,\n    unknown: true,\n  };\n\n  filterByGender = () => {};\n\n  handleSearchChange = (e) => {\n    e.persist();\n    this.setState((state) => ({\n      search: e.target.value,\n    }));\n  };\n\n  handleGender = (e) => {\n    e.persist();\n    this.setState((state) => ({\n      [e.target.name]: e.target.checked,\n    }));\n  };\n\n  render() {\n    const { search, female, male, unknown } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"contact-book bg-warning\">\n          <form className=\"contact-book-form\">\n            <input\n              type=\"text\"\n              value={search}\n              onChange={this.handleSearchChange}\n              className=\"input\"\n            />\n\n            <div className=\"checkbox-container d-flex justify-content-around\">\n              <div className=\"form-check form-check-inline\">\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" checked={female} name=\"female\" onChange={this.handleGender} />\n                <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">female</label>\n              </div>\n              <div className=\"form-check form-check-inline\">\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\" checked={male} name=\"male\" onChange={this.handleGender} />\n                <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">male</label>\n              </div>\n              <div className=\"form-check form-check-inline\">\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\" checked={unknown} name=\"unknown\" onChange={this.handleGender} />\n                <label className=\"form-check-label\" htmlFor=\"inlineCheckbox3\">unknown</label>\n              </div>\n            </div>\n          </form>\n\n          {contacts\n            .filter(\n              (contact) =>\n                (!search ||\n                  contact.lastName\n                    .toLowerCase()\n                    .includes(search.toLowerCase()) ||\n                  contact.firstName\n                    .toLowerCase()\n                    .includes(search.toLowerCase()) ||\n                  contact.phone.includes(search)) &&\n                (contact.gender\n                  ? (female && contact.gender === \"female\") ||\n                    (male && contact.gender === \"male\")\n                  : unknown)\n            )\n            .map((contact) => (\n              <Contact key={contact.lastName} contact={contact} />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Contacts />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}